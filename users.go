// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/FlatFilers/flatfile-go/core"
)

type ListUsersRequest struct {
	// Email of guest to return
	Email *string `json:"-"`
}

type ListUsersResponse struct {
	Data []*User `json:"data,omitempty"`

	_rawJSON json.RawMessage
}

func (l *ListUsersResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListUsersResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListUsersResponse(value)
	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListUsersResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

// Properties used to create a new user
type UserConfig struct {
	Email     string    `json:"email"`
	Name      string    `json:"name"`
	AccountId AccountId `json:"accountId"`

	_rawJSON json.RawMessage
}

func (u *UserConfig) UnmarshalJSON(data []byte) error {
	type unmarshaler UserConfig
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserConfig(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserConfig) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
